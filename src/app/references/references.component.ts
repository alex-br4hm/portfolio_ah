import { NgClass } from '@angular/common';
import { Component } from '@angular/core';

@Component({
  selector: 'app-references',
  standalone: true,
  imports: [NgClass],
  templateUrl: './references.component.html',
  styleUrl: './references.component.scss',
})
export class ReferencesComponent {
  references = [
    {
      isHovered: true,
      evaluator: 'Mailo MittelstÃ¤dt',
      evalatorPosition: 'Team Partner',
      reference:
        'Alex beeindruckt in Gruppenarbeiten durch sein umfangreiches Wissen und seine Expertise, die er stets bereitwillig mit dem Team teilt. Seine analytischen FÃ¤higkeiten und prÃ¤zisen BeitrÃ¤ge sorgen dafÃ¼r, dass komplexe Probleme schnell und effektiv gelÃ¶st werden. DarÃ¼ber hinaus ist Alex immer hilfsbereit und unterstÃ¼tzt seine Teammitglieder dabei, ihr VerstÃ¤ndnis zu vertiefen und gemeinsam beste Ergebnisse zu erzielen.  ',
    },
    {
      isHovered: false,
      evaluator: 'Joel Sygulla',
      evalatorPosition: 'Team Partner',
      reference:
        'Es war eine groÃŸe Bereicherung, Alexander bei unserem Projekt Join als Projektpartner zu haben. Er konnte durch seine hervorragenden Fachkenntnisse viel zum Team beitragen und uns Kollegen gut unterstÃ¼tzen. Ich habe einiges von ihm gelernt und seine klaren und effektiven KommunikationsfÃ¤higkeiten haben die Zusammenarbeit im Team erheblich verbessert. Es hat SpaÃŸ gemacht, mit ihm zusammenzuarbeiten, und ich kann ihn ohne Zweifel weiterempfehlen.',
    },
    {
      isHovered: false,
      evaluator: 'Jonas Mahlburg',
      evalatorPosition: 'Team Partner',
      reference:
        'Mit Alexander in einem Team zusammen arbeiten zu dÃ¼rfen war eine gute produktive Erfahrung. Alexander hat ein sehr gutes Wissen, Ã¼ber die Materie, konnte sich auch schnell in anderen Code einarbeiten und verstehen und ist ein prima Teamarbeiter. Ãœber eine weitere Zusammenarbeit wÃ¤re ich sehr froh ðŸ™‚ ',
    },
  ];

  index: number = 0;

  onMouseEnter(index: number) {
    this.references.forEach((reference, i) => {
      reference.isHovered = i === index;
    });
  }
}
